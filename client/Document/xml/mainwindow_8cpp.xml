<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="mainwindow_8cpp" kind="file">
    <compoundname>mainwindow.cpp</compoundname>
    <includes refid="mainwindow_8h" local="yes">mainwindow.h</includes>
    <includes local="yes">ui_mainwindow.h</includes>
    <includes local="no">boost/thread.hpp</includes>
    <includes local="no">unistd.h</includes>
    <includes local="yes">zmq.hpp</includes>
    <includes local="no">json/json.h</includes>
    <includes refid="indiprovclient_8h" local="yes">indiprovclient.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">boost/archive/text_oarchive.hpp</includes>
    <includes local="no">boost/archive/text_iarchive.hpp</includes>
    <includes local="no">boost/serialization/vector.hpp</includes>
    <incdepgraph>
      <node id="114">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="113">
        <label>boost/archive/text_iarchive.hpp</label>
      </node>
      <node id="103">
        <label>json/json.h</label>
      </node>
      <node id="107">
        <label>indiprovclient.h</label>
        <link refid="indiprovclient_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>mainwindow.cpp</label>
        <link refid="mainwindow.cpp"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>string</label>
      </node>
      <node id="101">
        <label>QMainWindow</label>
      </node>
      <node id="105">
        <label>boost/thread.hpp</label>
      </node>
      <node id="111">
        <label>fstream</label>
      </node>
      <node id="100">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>boost/archive/text_oarchive.hpp</label>
      </node>
      <node id="102">
        <label>zmq.hpp</label>
      </node>
      <node id="104">
        <label>ui_mainwindow.h</label>
      </node>
      <node id="106">
        <label>unistd.h</label>
      </node>
      <node id="110">
        <label>iostream</label>
      </node>
      <node id="108">
        <label>provutils.h</label>
        <link refid="provutils_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structmyteststruct" prot="public">myteststruct</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mainwindow_8h" kindref="compound">mainwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ui_mainwindow.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zmq.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;json/json.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="indiprovclient_8h" kindref="compound">indiprovclient.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/text_oarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/text_iarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/serialization/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="17" refid="structmyteststruct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmyteststruct" kindref="compound">myteststruct</ref>{</highlight></codeline>
<codeline lineno="18" refid="structmyteststruct_1a2a25e3e82c3ec8e4c9e2a6f6abe6a746" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmyteststruct_1a2a25e3e82c3ec8e4c9e2a6f6abe6a746" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="19" refid="structmyteststruct_1ade0ef34f12443469bad8641334c5931f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmyteststruct_1ade0ef34f12443469bad8641334c5931f" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="20" refid="structmyteststruct_1ad619e93b64c7295d8bb126ee2402372e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmyteststruct_1ad619e93b64c7295d8bb126ee2402372e" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22" refid="class_main_window_1a8b244be8b7b7db1b08de2a2acb9409db" refkind="member"><highlight class="normal"><ref refid="class_main_window_1a8b244be8b7b7db1b08de2a2acb9409db" kindref="member">MainWindow::MainWindow</ref>(QWidget<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>QMainWindow(parent),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>ui(new<sp/>Ui::<ref refid="class_main_window" kindref="compound">MainWindow</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ui-&gt;setupUi(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>boost<sp/>serialization</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>vector&lt;myteststruct&gt;<sp/>tmpvec;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/>myteststruct<sp/>tmpstr;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>tmpstr.x=10;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>tmpstr.y=11;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>tmpstr.z=12;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>tmpvec.push_back(tmpstr);</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>tmpvec.push_back(tmpstr);</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/>tmpvec.push_back(tmpstr);</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v<sp/>=<sp/>{1.0<sp/>,2.0,<sp/>3.4,<sp/>5.6};</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>std::ofstream<sp/>ofs(&quot;myfile2.ser&quot;);</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>boost::archive::text_oarchive<sp/>myoa(ofs);</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>myoa<sp/>&amp;<sp/>tmpstr;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>string<sp/>line;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v2;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>std::ifstream<sp/>ifs(&quot;myfile.ser&quot;);</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/>boost::archive::text_iarchive<sp/>ia(ifs);</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>ia<sp/>&amp;<sp/>v2;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>&amp;d:<sp/>v2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_main_window_1ae4b6bf5d06819fab861e9e99b5a88699" kindref="member">testFunc</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/>myCommand.push_back(&quot;Init<sp/>DB&quot;);</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>myCommand.push_back(&quot;arg<sp/>a&quot;);</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>myCommand.push_back(&quot;arg<sp/>b&quot;);</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>myCommand.push_back(&quot;arg<sp/>c&quot;);</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>myCommand.push_back(&quot;arg<sp/>d&quot;);</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>this-&gt;serializeToJson(myCommand)&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>context<sp/>=<sp/>new<sp/>zmq::context_t(1);</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>var<sp/>=<sp/>0;<sp/>var<sp/>&lt;<sp/>5;<sp/>++var)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::thread<sp/>(&amp;MainWindow::ESender,this,context,myCommand);</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_main_window_1ae98d00a93bc118200eeef9f9bba1dba7" refkind="member"><highlight class="normal"><ref refid="class_main_window_1ae98d00a93bc118200eeef9f9bba1dba7" kindref="member">MainWindow::~MainWindow</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ui;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70" refid="class_main_window_1ae4b6bf5d06819fab861e9e99b5a88699" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_window_1ae4b6bf5d06819fab861e9e99b5a88699" kindref="member">MainWindow::testFunc</ref>(){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_in_di_prov_client" kindref="compound">InDiProvClient</ref>*<sp/>provclient<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client" kindref="compound">InDiProvClient</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>wfname=</highlight><highlight class="stringliteral">&quot;WFName1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>wfpass<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>wfid<sp/>=<sp/>provclient-&gt;createWF(wfname<sp/>,wfpass);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(wfid<sp/>!=<sp/>-1){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wfid<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Workflow<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;&lt;&lt;<sp/>wfid<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provclient-&gt;<ref refid="class_in_di_prov_client_1ae2e0dd71c6b83274706f1bb26742cabe" kindref="member">loadWF</ref>(wfid<sp/>,<sp/>wfpass)==wfid){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Workflow<sp/>loaded<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wfid<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entityID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1abc388b71a141493921a6e51f18b60da8" kindref="member">setEntity</ref>(</highlight><highlight class="stringliteral">&quot;myLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myLocation&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myType&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myVal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entityID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>entityID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>activityID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1a8a2e2aaf3f8b6a8e31f31af31603b681" kindref="member">setActivity</ref>(provclient-&gt;<ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">getCurrentTime</ref>(),provclient-&gt;<ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">getCurrentTime</ref>(),</highlight><highlight class="stringliteral">&quot;myActivityLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myActivityLocation&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myActivityType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activityID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Activity<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>activityID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>agentID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1a75ad36497b77b81841cf8cf411aea244" kindref="member">setAgent</ref>(</highlight><highlight class="stringliteral">&quot;myAgentLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myAgentLocation&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myAgentType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agentID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Agent<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>agentID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usedID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1ae33d7a1a44e8d4e7ebbf832271938bce" kindref="member">setused</ref>(activityID,entityID,provclient-&gt;<ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">getCurrentTime</ref>(),</highlight><highlight class="stringliteral">&quot;myUsedLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myUsedLocation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;myUsedRole&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;myUsedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usedID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Used<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>usedID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasGeneratedByID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1a30aa922f818e6a6104185c9a11191acb" kindref="member">setwasGeneratedBy</ref>(entityID,<sp/>activityID,provclient-&gt;<ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">getCurrentTime</ref>(),</highlight><highlight class="stringliteral">&quot;mywasGeneratedByLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mywasGeneratedByLocation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mywasGeneratedByRole&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mywasGeneratedByType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasGeneratedByID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasGeneratedBy<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasGeneratedByID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasDerivedFromID<sp/>=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1afc085d595289e66d9b3928e9a4229051" kindref="member">setwasDerivedFrom</ref>(entityID,entityID,activityID,wasGeneratedByID,usedID,</highlight><highlight class="stringliteral">&quot;mywasDerivedFromLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mywasDerivedFromType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasDerivedFromID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasDerivedFrom<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasDerivedFromID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasAttributedToID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1ac57311b22c1378f8f542e91c4285f935" kindref="member">setwasAttributedTo</ref>(entityID,agentID,</highlight><highlight class="stringliteral">&quot;mysetwasAttributedToLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mysetwasAttributedToType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasAttributedToID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasAttributedTo<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasAttributedToID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasAssociatedWithID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1a1a54aaeb77c6c4cca257999acf42d1e7" kindref="member">setwasAssociatedWith</ref>(activityID,agentID,-1,</highlight><highlight class="stringliteral">&quot;mywasAssociatedWithLabel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mywasAssociatedWithRole&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mywasAssociatedWithType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasAssociatedWithID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasAssociatedWith<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasAssociatedWithID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasStartedByID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1a05a450e338417ff0966bba635834f64a" kindref="member">setwasStartedBy</ref>(activityID,entityID,entityID,provclient-&gt;<ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">getCurrentTime</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;mywasStartedByLabel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mywasStartedByLocation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mywasStartedByRole&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mywasStartedByType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasStartedByID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasStartedBy<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasStartedByID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasEndedByID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1aecb51b066ab1096fc095b00ec6e04c8b" kindref="member">setwasEndedBy</ref>(activityID,entityID,entityID,provclient-&gt;<ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">getCurrentTime</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;mywasEndedByLabel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mywasEndedByLocation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mywasEndedByRole&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mywasEndedByType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasEndedByID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasEndedBycreated<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasEndedByID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wasInformedByID=<sp/>provclient-&gt;<ref refid="class_in_di_prov_client_1aa9fbfb3480eded57485c9d4585375625" kindref="member">setwasInformedBy</ref>(activityID,activityID,<sp/></highlight><highlight class="stringliteral">&quot;wasInformedByLabel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;wasInformedByType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasInformedByID<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wasInformedBy<sp/>created<sp/>sucessfully<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>wasInformedByID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>entities</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>EntitiesJSON=<sp/>provclient-&gt;getEntities();</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Entities<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr<sp/>=<sp/>new<sp/>char[EntitiesJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr,<sp/>EntitiesJSON.c_str());</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::Entity&gt;<sp/>entities<sp/>=<sp/>provclient-&gt;deSerializeEntities(cstr);</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>entities.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>entities[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>entities[i].location<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>entities[i].type&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>entities[i].value<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>entities[i].ID<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>activities</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>ActivitiesJSON=<sp/>provclient-&gt;getActivities();</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Activities<sp/>loaded<sp/>sucessfully,<sp/>total:<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr2<sp/>=<sp/>new<sp/>char[ActivitiesJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr2,<sp/>ActivitiesJSON.c_str());</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::Activity&gt;<sp/>activities<sp/>=<sp/>provclient-&gt;deSerializeActivities(cstr2);</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>activities.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>activities[i].startTime<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>activities[i].endTime<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;activities[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>activities[i].location<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>activities[i].type&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>activities[i].ID<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr2;</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>agents</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>AgentsJSON=<sp/>provclient-&gt;getAgents();</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Agents<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr3<sp/>=<sp/>new<sp/>char[AgentsJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr3,<sp/>AgentsJSON.c_str());</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::Agent&gt;<sp/>agents<sp/>=<sp/>provclient-&gt;deSerializeAgents(cstr3);</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr3;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>agents.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>agents[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>agents[i].location<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>agents[i].type&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>agents[i].ID<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>useds</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>UsedsJSON=<sp/>provclient-&gt;getUseds();</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Useds<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr4<sp/>=<sp/>new<sp/>char[UsedsJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr4,<sp/>UsedsJSON.c_str());</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::Used&gt;<sp/>useds=<sp/>provclient-&gt;deSerializeUseds(cstr4);</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr4;</highlight></codeline>
<codeline lineno="170"><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>useds.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>useds[i].actID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].entID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].usedTime<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].location<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].role<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].type<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>useds[i].ID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>WasGeneratedBys</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>WasGeneratedBysJSON=<sp/>provclient-&gt;getWasGeneratedBys();</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;GeneratedBys<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr5<sp/>=<sp/>new<sp/>char[WasGeneratedBysJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr5,<sp/>WasGeneratedBysJSON.c_str());</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::WasGeneratedBy&gt;<sp/>wasGeneratedBys=<sp/>provclient-&gt;deSerializeWasGeneratedBys(cstr5);</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr5;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wasGeneratedBys.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].actID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].entID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].actID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].generateTime<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].location<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].role<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].type<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasGeneratedBys[i].ID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>WasDerivedFrom</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>WasDerivedFromsJSON=<sp/>provclient-&gt;getWasDerivedFroms();</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;WasDerivedFrom<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr6<sp/>=<sp/>new<sp/>char[WasDerivedFromsJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr6,<sp/>WasDerivedFromsJSON.c_str());</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::WasDerivedFrom&gt;<sp/>WasDerivedFroms=<sp/>provclient-&gt;deSerializeWasDerivedFroms(cstr6);</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr6;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>WasDerivedFroms.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>WasDerivedFroms[i].genEntID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>WasDerivedFroms[i].usdEntID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasDerivedFroms[i].actID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasDerivedFroms[i].genID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasDerivedFroms[i].usgID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasDerivedFroms[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasDerivedFroms[i].type<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasDerivedFroms[i].ID<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>WasAttributedTo</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>WasAttributedTosJSON=<sp/>provclient-&gt;getWasAttributedTos();</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;WasAttributedTos<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/><sp/>endl;</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr7<sp/>=<sp/>new<sp/>char[WasAttributedTosJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr7,<sp/>WasAttributedTosJSON.c_str());</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::WasAttributedTo&gt;<sp/>WasAttributedTos=<sp/>provclient-&gt;deSerializeWasAttributedTos(cstr7);</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr7;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>WasAttributedTos.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>WasAttributedTos[i].entID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>WasAttributedTos[i].agentID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAttributedTos[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAttributedTos[i].type<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAttributedTos[i].ID<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>WasAssociatedWiths</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>WasAssociatedWithsJSON=<sp/>provclient-&gt;getWasAssociatedWiths();</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;WasAssociatedWiths<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/><sp/>WasAssociatedWithsJSON<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr8<sp/>=<sp/>new<sp/>char[WasAssociatedWithsJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr8,<sp/>WasAssociatedWithsJSON.c_str());</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::WasAssociatedWith&gt;<sp/>WasAssociatedWiths=<sp/>provclient-&gt;deSerializeWasAssociatedWiths(cstr8);</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr8;</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>WasAssociatedWiths.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>WasAssociatedWiths[i].actID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>WasAssociatedWiths[i].agentID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAssociatedWiths[i].planID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAssociatedWiths[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAssociatedWiths[i].role<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAssociatedWiths[i].type<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;WasAssociatedWiths[i].ID<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>WasStartedBys</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>WasStartedBysJSON=<sp/>provclient-&gt;getwasStartedBys();</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;WasStartedBys<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/><sp/>WasStartedBysJSON<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr9<sp/>=<sp/>new<sp/>char[WasStartedBysJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr9,<sp/>WasStartedBysJSON.c_str());</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::WasStartedBy&gt;<sp/>wasStartedBys=<sp/>provclient-&gt;deSerializeWasStartedBys(cstr9);</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr9;</highlight></codeline>
<codeline lineno="230"><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wasStartedBys.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>wasStartedBys[i].actID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].entID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].starterActID<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].sTime<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].location<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].role<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].type<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/><sp/>wasStartedBys[i].ID<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//get<sp/>WasInformedBys</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>WasInformedBysJSON=<sp/>provclient-&gt;getwasInformedBys();</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;WasInformedBys<sp/>loaded<sp/>sucessfully:<sp/>&quot;&lt;&lt;<sp/><sp/>WasInformedBysJSON<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*cstr10<sp/>=<sp/>new<sp/>char[WasInformedBysJSON.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cstr10,<sp/>WasInformedBysJSON.c_str());</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>&lt;ProvUtils::WasInformedBy&gt;<sp/>wasInformedBys=<sp/>provclient-&gt;deSerializeWasInformedBys(cstr10);</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>cstr10;</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wasInformedBys.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>wasInformedBys[i].informed<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasInformedBys[i].informant<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasInformedBys[i].label<sp/>&lt;&lt;<sp/>&quot;<sp/>,&quot;<sp/>&lt;&lt;<sp/>wasInformedBys[i].type<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>XML<sp/>serialization<sp/>.<sp/>.<sp/>.<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;provclient-&gt;<ref refid="class_in_di_prov_client_1a18211425d8d357513a16ff8314727470" kindref="member">exportPROV</ref>()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252" refid="class_main_window_1a3d5cb165efb53da512f94288d9257168" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_window_1a3d5cb165efb53da512f94288d9257168" kindref="member">MainWindow::ESender</ref>(zmq::context_t*<sp/>context,vector&lt;string&gt;<sp/>mycmd)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msgstr<sp/>=<sp/><ref refid="class_main_window_1a92901009572885892658ab2e8d7bb191" kindref="member">serializeToJson</ref>(mycmd);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq::socket_t<sp/>socket<sp/>(*context,<sp/>ZMQ_REQ);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>5556;<sp/>j<sp/>&lt;<sp/>5560;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>address((</highlight><highlight class="stringliteral">&quot;tcp://localhost:&quot;</highlight><highlight class="normal">+std::to_string(j)));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket.connect(address.c_str());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq::message_t<sp/>msg<sp/>(msgstr.size()+1);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)msg.data(),<sp/>msgstr.c_str(),<sp/>msgstr.size()+1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>socket.send<sp/>(msg);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>sent<sp/>.<sp/>.<sp/>.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq::message_t<sp/>reply;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>socket.recv(&amp;reply);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)reply.data();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str(tmp);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>str<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273" refid="class_main_window_1a92901009572885892658ab2e8d7bb191" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_main_window_1a92901009572885892658ab2e8d7bb191" kindref="member">MainWindow::serializeToJson</ref>(vector&lt;string&gt;<sp/>commandVec)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_object_new_object();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Creating<sp/>a<sp/>json<sp/>array*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_new_array();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>commandVec.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jstring1<sp/>=<sp/>json_object_new_string(commandVec[i].c_str());</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_array_add(jarray,jstring1);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*jstrcmd<sp/>=<sp/>json_object_new_string(commandVec[0].c_str());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_add(jobj,</highlight><highlight class="stringliteral">&quot;Command&quot;</highlight><highlight class="normal">,<sp/>jstrcmd);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_add(jobj,</highlight><highlight class="stringliteral">&quot;Arguments&quot;</highlight><highlight class="normal">,<sp/>jarray);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Now<sp/>printing<sp/>the<sp/>json<sp/>object*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf<sp/>(&quot;The<sp/>json<sp/>object<sp/>created:<sp/>%sn&quot;,json_object_to_json_string(jobj));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;json_parse(jobj);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json_object_to_json_string(jobj);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295" refid="class_main_window_1a9bc89dd1034e410e99a9e3f82cb032b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_window_1a9bc89dd1034e410e99a9e3f82cb032b3" kindref="member">MainWindow::json_parse</ref>(json_object<sp/>*<sp/>jobj)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>json_type<sp/>type;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;string&gt;<sp/>commandVec;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>json_object_get_type(val);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;type:<sp/>&quot;&lt;&lt;type&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;Command&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandVec.push_back(json_object_get_string(val));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;Arguments&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>json_parse(json_object<sp/>*<sp/>jobj);<sp/>/*Forward<sp/>Declaration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>json_type<sp/>type;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Array<sp/>Length:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>arraylen<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandVec.push_back(json_object_get_string(json_object_array_get_idx(jarray,<sp/>i)));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/><sp/>j<sp/>&lt;<sp/>commandVec.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>commandVec[j]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mohammad/Downloads/InDivProvClient/mainwindow.cpp"/>
  </compounddef>
</doxygen>
