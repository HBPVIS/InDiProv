<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="indiprovclient_8cpp" kind="file">
    <compoundname>indiprovclient.cpp</compoundname>
    <includes refid="indiprovclient_8h" local="yes">indiprovclient.h</includes>
    <includes local="no">boost/thread.hpp</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdio.h</includes>
    <includes local="yes">zmq.hpp</includes>
    <includes local="no">json/json.h</includes>
    <includes refid="provutils_8h" local="yes">provutils.h</includes>
    <incdepgraph>
      <node id="73">
        <label>json/json.h</label>
      </node>
      <node id="71">
        <label>indiprovclient.h</label>
        <link refid="indiprovclient_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>stdlib.h</label>
      </node>
      <node id="75">
        <label>string</label>
      </node>
      <node id="76">
        <label>boost/thread.hpp</label>
      </node>
      <node id="78">
        <label>string.h</label>
      </node>
      <node id="72">
        <label>zmq.hpp</label>
      </node>
      <node id="77">
        <label>unistd.h</label>
      </node>
      <node id="81">
        <label>vector</label>
      </node>
      <node id="70">
        <label>indiprovclient.cpp</label>
        <link refid="indiprovclient.cpp"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>iostream</label>
      </node>
      <node id="74">
        <label>provutils.h</label>
        <link refid="provutils_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="indiprovclient_8h" kindref="compound">indiprovclient.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zmq.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;json/json.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="provutils_8h" kindref="compound">provutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_in_di_prov_client_1a33dfecf362dc5d453ef2907834bbe09c" refkind="member"><highlight class="normal"><ref refid="class_in_di_prov_client_1a33dfecf362dc5d453ef2907834bbe09c" kindref="member">InDiProvClient::InDiProvClient</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>WFID=-1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>WFPass=</highlight><highlight class="stringliteral">&quot;NoPass&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>context<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>zmq::context_t(1);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>socket<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>zmq::socket_t(*context,<sp/>ZMQ_REQ);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>5556;<sp/>j<sp/>&lt;<sp/>5560;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>address((</highlight><highlight class="stringliteral">&quot;tcp://localhost:&quot;</highlight><highlight class="normal">+std::to_string(j)));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;connect(address.c_str());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a6844299f790bb3e1f460b64fca2a2585" kindref="member">InDiProvClient::getCurrentTime</ref>(){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;curTime,<sp/>NULL);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milli<sp/>=<sp/>curTime.tv_usec<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer<sp/>[80];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>strftime(buffer,<sp/>80,<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H:%M:%S&quot;</highlight><highlight class="normal">,<sp/>localtime(&amp;curTime.tv_sec));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>currentTime[84]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(currentTime,<sp/></highlight><highlight class="stringliteral">&quot;%s.%d&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>milli);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string(currentTime);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33" refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">InDiProvClient::ESender</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msgstr)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq::message_t<sp/>msg<sp/>(msgstr.size()+1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)msg.data(),<sp/>msgstr.c_str(),<sp/>msgstr.size()+1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>socket-&gt;send<sp/>(msg);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>msgstr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sent<sp/>.<sp/>.<sp/>.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq::message_t<sp/>reply;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>socket-&gt;recv(&amp;reply);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)reply.data();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str(tmp);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>str<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sleep(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47" refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">InDiProvClient::serializeToJson</ref>(vector&lt;string&gt;<sp/>commandVec)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_object_new_object();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Creating<sp/>a<sp/>json<sp/>array*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_new_array();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>commandVec.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jstring1<sp/>=<sp/>json_object_new_string(commandVec[i].c_str());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_array_add(jarray,jstring1);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*jstrcmd<sp/>=<sp/>json_object_new_string(commandVec[0].c_str());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*jWFID<sp/>=<sp/>json_object_new_int(this-&gt;WFID);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*jWFPass<sp/>=<sp/>json_object_new_string((this-&gt;WFPass).c_str());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_add(jobj,</highlight><highlight class="stringliteral">&quot;Command&quot;</highlight><highlight class="normal">,<sp/>jstrcmd);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_add(jobj,</highlight><highlight class="stringliteral">&quot;WFID&quot;</highlight><highlight class="normal">,<sp/>jWFID);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_add(jobj,</highlight><highlight class="stringliteral">&quot;WFPass&quot;</highlight><highlight class="normal">,<sp/>jWFPass);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_add(jobj,</highlight><highlight class="stringliteral">&quot;Arguments&quot;</highlight><highlight class="normal">,<sp/>jarray);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Now<sp/>printing<sp/>the<sp/>json<sp/>object*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf<sp/>(&quot;The<sp/>json<sp/>object<sp/>created:<sp/>%sn&quot;,json_object_to_json_string(jobj));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;json_parse(jobj);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json_object_to_json_string(jobj);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72" refid="class_in_di_prov_client_1ae4bca8e968f14753a1fd6e7b59b92f3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ae4bca8e968f14753a1fd6e7b59b92f3c" kindref="member">InDiProvClient::json_parse</ref>(json_object<sp/>*<sp/>jobj)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>json_type<sp/>type;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;string&gt;<sp/>commandVec;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>json_object_get_type(val);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;type:<sp/>&quot;&lt;&lt;type&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;Command&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandVec.push_back(json_object_get_string(val));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;Arguments&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>json_parse(json_object<sp/>*<sp/>jobj);<sp/>/*Forward<sp/>Declaration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>json_type<sp/>type;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Array<sp/>Length:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>arraylen<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandVec.push_back(json_object_get_string(json_object_array_get_idx(jarray,<sp/>i)));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/><sp/>j<sp/>&lt;<sp/>commandVec.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>commandVec[j]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96" refid="class_in_di_prov_client_1aa8d9cbc951a6fd184e5156c3da84bc14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa8d9cbc951a6fd184e5156c3da84bc14" kindref="member">InDiProvClient::createWF</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>WFName<sp/>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>password){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;createWF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(WFName);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(password);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//boost::thread<sp/>(&amp;InDiProvClient::ESender,this,serializeToJson(myCommand));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105" refid="class_in_di_prov_client_1ae2e0dd71c6b83274706f1bb26742cabe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ae2e0dd71c6b83274706f1bb26742cabe" kindref="member">InDiProvClient::loadWF</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WFid,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>password){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;loadWF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(WFid));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(password);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmpWFid<sp/>=<sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str())<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WFid<sp/>==<sp/>tmpWFid<sp/>){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;WFID<sp/>=<sp/>WFid;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;WFPass<sp/>=<sp/>password;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmpWFid;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_in_di_prov_client_1a18211425d8d357513a16ff8314727470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a18211425d8d357513a16ff8314727470" kindref="member">InDiProvClient::exportPROV</ref>(){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;exportPROV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127" refid="class_in_di_prov_client_1ab4cd3159aff7a597b2a394a43b589003" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ab4cd3159aff7a597b2a394a43b589003" kindref="member">InDiProvClient::getWFID</ref>(){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;WFID<sp/>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130" refid="class_in_di_prov_client_1aa45bb40b1c500fbd4a7a9abd862e7f82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa45bb40b1c500fbd4a7a9abd862e7f82" kindref="member">InDiProvClient::getWFPass</ref>(){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;WFPass;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133" refid="class_in_di_prov_client_1abc388b71a141493921a6e51f18b60da8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1abc388b71a141493921a6e51f18b60da8" kindref="member">InDiProvClient::setEntity</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>val){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setEntity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(val);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_in_di_prov_client_1a8a2e2aaf3f8b6a8e31f31af31603b681" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a8a2e2aaf3f8b6a8e31f31af31603b681" kindref="member">InDiProvClient::setActivity</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>startTime,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>endTime,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setActivity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(startTime);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(endTime);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155" refid="class_in_di_prov_client_1a75ad36497b77b81841cf8cf411aea244" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a75ad36497b77b81841cf8cf411aea244" kindref="member">InDiProvClient::setAgent</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setAgent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163" refid="class_in_di_prov_client_1ae33d7a1a44e8d4e7ebbf832271938bce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ae33d7a1a44e8d4e7ebbf832271938bce" kindref="member">InDiProvClient::setused</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actID,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entID,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>usedTime,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>role,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setused&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(actID));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(entID));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(usedTime);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(role);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175" refid="class_in_di_prov_client_1a30aa922f818e6a6104185c9a11191acb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a30aa922f818e6a6104185c9a11191acb" kindref="member">InDiProvClient::setwasGeneratedBy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entID,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actID,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>generateTime,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>role,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasGeneratedBy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(entID));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(actID));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(generateTime);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(role);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187" refid="class_in_di_prov_client_1afc085d595289e66d9b3928e9a4229051" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1afc085d595289e66d9b3928e9a4229051" kindref="member">InDiProvClient::setwasDerivedFrom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>genEntID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usdEntID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>genID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usgID,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasDerivedFrom&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(genEntID));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(usdEntID));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(actID));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(genID));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(usgID));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199" refid="class_in_di_prov_client_1ac57311b22c1378f8f542e91c4285f935" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ac57311b22c1378f8f542e91c4285f935" kindref="member">InDiProvClient::setwasAttributedTo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entID,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>agentID,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasAttributedTo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(entID));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(agentID));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208" refid="class_in_di_prov_client_1a1a54aaeb77c6c4cca257999acf42d1e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a1a54aaeb77c6c4cca257999acf42d1e7" kindref="member">InDiProvClient::setwasAssociatedWith</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>agentID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>planID,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>role,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasAssociatedWith&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(actID));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(agentID));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(planID));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(role);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219" refid="class_in_di_prov_client_1aa9fbfb3480eded57485c9d4585375625" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa9fbfb3480eded57485c9d4585375625" kindref="member">InDiProvClient::setwasInformedBy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>informed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>informant,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasInformedBy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(informed));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(informant));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228" refid="class_in_di_prov_client_1a05a450e338417ff0966bba635834f64a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a05a450e338417ff0966bba635834f64a" kindref="member">InDiProvClient::setwasStartedBy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starterActID,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sTime,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>role,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasStartedBy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(actID));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(entID));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(starterActID));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(sTime);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(role);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242" refid="class_in_di_prov_client_1aecb51b066ab1096fc095b00ec6e04c8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aecb51b066ab1096fc095b00ec6e04c8b" kindref="member">InDiProvClient::setwasEndedBy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enderActID,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>eTime,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>role,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;setwasEndedBy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(actID));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(entID));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(std::to_string(enderActID));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(eTime);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(label);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(location);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(role);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(type);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoi((<ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand))).c_str());</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_in_di_prov_client_1aa2e07af7b32a73889ef3332f04bbcf1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa2e07af7b32a73889ef3332f04bbcf1a" kindref="member">InDiProvClient::getEntities</ref>(){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getEntities&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_in_di_prov_client_1a07d2197c8cce39ba7dd33edbfd09af78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a07d2197c8cce39ba7dd33edbfd09af78" kindref="member">InDiProvClient::getActivities</ref>(){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getActivities&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_in_di_prov_client_1ab4b6f77ddb41281dd8714c7742faafbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ab4b6f77ddb41281dd8714c7742faafbc" kindref="member">InDiProvClient::getAgents</ref>(){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getAgents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="class_in_di_prov_client_1a88514328d91e2c6946b343176fabf650" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a88514328d91e2c6946b343176fabf650" kindref="member">InDiProvClient::getUseds</ref>(){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getUseds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283" refid="class_in_di_prov_client_1abe2dc19daa8dfa5b04fb3ac623e47bc0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1abe2dc19daa8dfa5b04fb3ac623e47bc0" kindref="member">InDiProvClient::getWasGeneratedBys</ref>(){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getWasGeneratedBys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289" refid="class_in_di_prov_client_1adffc2e33efbc970dbb2f8bb7c5332744" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1adffc2e33efbc970dbb2f8bb7c5332744" kindref="member">InDiProvClient::getWasDerivedFroms</ref>(){</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getWasDerivedFroms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295" refid="class_in_di_prov_client_1a73cf344a968785eb407488c423e00cf2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a73cf344a968785eb407488c423e00cf2" kindref="member">InDiProvClient::getWasAttributedTos</ref>(){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getWasAttributedTos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301" refid="class_in_di_prov_client_1af0c7484225b5415c89b10f73f61ad3d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1af0c7484225b5415c89b10f73f61ad3d1" kindref="member">InDiProvClient::getWasAssociatedWiths</ref>(){</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getWasAssociatedWiths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307" refid="class_in_di_prov_client_1a1ca1cc7ed3c7f08451ae78a2af50b223" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1a1ca1cc7ed3c7f08451ae78a2af50b223" kindref="member">InDiProvClient::getwasInformedBys</ref>(){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getwasInformedBys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313" refid="class_in_di_prov_client_1aef39fc253d97b3534b8772ece2d01735" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aef39fc253d97b3534b8772ece2d01735" kindref="member">InDiProvClient::getwasStartedBys</ref>(){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getwasStartedBys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319" refid="class_in_di_prov_client_1ab7946e8a31014d95bf03250b6b466bb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1ab7946e8a31014d95bf03250b6b466bb1" kindref="member">InDiProvClient::getwasEndedBys</ref>(){</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>myCommand;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;getwasEndedBys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>myCommand.push_back(</highlight><highlight class="stringliteral">&quot;Reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_in_di_prov_client_1aa25fc27aead871d3a8103e27997cb2c6" kindref="member">ESender</ref>(<ref refid="class_in_di_prov_client_1af7cb9082299c4dd099c176b55899dff0" kindref="member">serializeToJson</ref>(myCommand));</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//deserialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_in_di_prov_client_1af2de8cfed71d1340578e21794a32f1a1" refkind="member"><highlight class="normal">vector&lt;ProvUtils::Entity&gt;<sp/><ref refid="class_in_di_prov_client_1af2de8cfed71d1340578e21794a32f1a1" kindref="member">InDiProvClient::deSerializeEntities</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*entitiesStr){</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(entitiesStr);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::Entity&gt;<sp/>entities;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;entities&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_entity" kindref="compound">ProvUtils::Entity</ref><sp/>tmpEntity;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpEntity.<ref refid="struct_prov_utils_1_1_entity_1a1da24da5a6989c2ac22f5fd3464ffbc2" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpEntity.<ref refid="struct_prov_utils_1_1_entity_1ac2670e0260f3ff358475f9758af9eafe" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpEntity.<ref refid="struct_prov_utils_1_1_entity_1aaf7eb08fca6dddb2534ff34124a9b69c" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpEntity.<ref refid="struct_prov_utils_1_1_entity_1ad2f99bb0a93f48d801f9f425ecedfcce" kindref="member">value</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpEntity.<ref refid="struct_prov_utils_1_1_entity_1adbf2382ee1ccd90946c2dd78071a5593" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entities.push_back(tmpEntity);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entities;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355" refid="class_in_di_prov_client_1ae99802bda1135179aa50a4413ef3c4e6" refkind="member"><highlight class="normal">vector&lt;ProvUtils::Activity&gt;<sp/><ref refid="class_in_di_prov_client_1ae99802bda1135179aa50a4413ef3c4e6" kindref="member">InDiProvClient::deSerializeActivities</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*activitiesStr){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(activitiesStr);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::Activity&gt;<sp/>activities;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;activities&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_activity" kindref="compound">ProvUtils::Activity</ref><sp/>tmpActivity;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;startTime&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpActivity.<ref refid="struct_prov_utils_1_1_activity_1a559304d758e8a9f3b89365d7fd441522" kindref="member">startTime</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;endTime&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpActivity.<ref refid="struct_prov_utils_1_1_activity_1ab36fceb1a61c132c1251ed7f3843c9ed" kindref="member">endTime</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpActivity.<ref refid="struct_prov_utils_1_1_activity_1afb1b7e2ef615e4fcf11aa74e2340ab7f" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpActivity.<ref refid="struct_prov_utils_1_1_activity_1a87753df0d0a14b8af93b0210fde66261" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpActivity.<ref refid="struct_prov_utils_1_1_activity_1a210efd6ae1c8bf6ef64265374d745b93" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpActivity.<ref refid="struct_prov_utils_1_1_activity_1a0e43209e61d327059162c0d1951aef6c" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activities.push_back(tmpActivity);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>activities;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385" refid="class_in_di_prov_client_1af3dd5119f070e70782d5d8cbeb15b3c4" refkind="member"><highlight class="normal">vector&lt;ProvUtils::Agent&gt;<sp/><ref refid="class_in_di_prov_client_1af3dd5119f070e70782d5d8cbeb15b3c4" kindref="member">InDiProvClient::deSerializeAgents</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*agentsStr){</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(agentsStr);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::Agent&gt;<sp/>agents;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;agents&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_agent" kindref="compound">ProvUtils::Agent</ref><sp/>tmpAgent;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpAgent.<ref refid="struct_prov_utils_1_1_agent_1a3a9574d1061f33684ff8fb85d5a9ed60" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpAgent.<ref refid="struct_prov_utils_1_1_agent_1a950c27a3d264ecb209fbb09151a86148" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpAgent.<ref refid="struct_prov_utils_1_1_agent_1a1afa29b1a7cc51f53535d392a09914ac" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpAgent.<ref refid="struct_prov_utils_1_1_agent_1a306ec064cb69d3a6ac4fc0cf77c10b53" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agents.push_back(tmpAgent);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agents;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411" refid="class_in_di_prov_client_1a6978eb897e437df621830f4859a79368" refkind="member"><highlight class="normal">vector&lt;ProvUtils::Used&gt;<sp/><ref refid="class_in_di_prov_client_1a6978eb897e437df621830f4859a79368" kindref="member">InDiProvClient::deSerializeUseds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*usedsStr){</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(usedsStr);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::Used&gt;<sp/>useds;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;useds&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_used" kindref="compound">ProvUtils::Used</ref><sp/>tmpUsed;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;actID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1ae9754f73fcf3c6ecff1c0aa3e8362079" kindref="member">actID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;entID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1ac53b2a074e71f7b481245eeda9fd0ecb" kindref="member">entID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;usedTime&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1a1df6793b3f8578bcd10d4656686076a1" kindref="member">usedTime</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1a32a7fe21697b5cd4e9d5a4f70875a1e7" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1ad10b41ea4d8293a2bc74757ed6242d8d" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;role&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1a3f01967a2959a16d281ef6670436020a" kindref="member">role</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1aad9ebc316314b07ee9f6a28467de6948" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpUsed.<ref refid="struct_prov_utils_1_1_used_1aed0e9fdd3f44f6711c33765e9526c06b" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useds.push_back(tmpUsed);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>useds;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446" refid="class_in_di_prov_client_1afead00512a6bf04b3d134a3de1ab3909" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasGeneratedBy&gt;<sp/><ref refid="class_in_di_prov_client_1afead00512a6bf04b3d134a3de1ab3909" kindref="member">InDiProvClient::deSerializeWasGeneratedBys</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wasGeneratedBysStr){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(wasGeneratedBysStr);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasGeneratedBy&gt;<sp/>wasGeneratedBys;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasGeneratedBys&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_generated_by" kindref="compound">ProvUtils::WasGeneratedBy</ref><sp/>tmpWasGeneratedBy;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;actID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a0fdc1d899eaf8eae7db216a566315886" kindref="member">actID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;entID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a8d29264ea8f2842169d5fdf269924d5b" kindref="member">entID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;generateTime&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a206ec37f55ac4258a4114ae2778ab09b" kindref="member">generateTime</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a9f6b81f45912688abbf99d928e7d8e8f" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a13dc655caf70af358f6971e430367995" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;role&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a2e51f173fa9aaa64cb2b98b4246e85fb" kindref="member">role</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a7a9540ee8718a4dfe0ff9a6f877e4ce5" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasGeneratedBy.<ref refid="struct_prov_utils_1_1_was_generated_by_1a40485fa84deb9d598c3aac5cfd576b96" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasGeneratedBys.push_back(tmpWasGeneratedBy);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasGeneratedBys;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480" refid="class_in_di_prov_client_1ab68be507c04d2e4c27565489f045ac48" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasDerivedFrom&gt;<sp/><ref refid="class_in_di_prov_client_1ab68be507c04d2e4c27565489f045ac48" kindref="member">InDiProvClient::deSerializeWasDerivedFroms</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wasDerivedFromsStr){</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(wasDerivedFromsStr);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasDerivedFrom&gt;<sp/>wasDerivedFroms;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasDerivedFroms&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_derived_from" kindref="compound">ProvUtils::WasDerivedFrom</ref><sp/>tmpWasDerivedFrom;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;genEntID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1ad38716ef9c4e7e45816ac92fc3e4076b" kindref="member">genEntID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;usdEntID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1a8817cd1561cf086b54b5b90f510375c8" kindref="member">usdEntID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;actID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1a604103420bd0c24bb2eddfad7628753e" kindref="member">actID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;genID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1a371c5f41d548fab8b774148cd55c3b8e" kindref="member">genID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;usgID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1aea9320eb588222ecf79a70528bbe3ae3" kindref="member">usgID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1ac81c10113fc119b56b62b208534d6391" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1a3b9eb43df6283b72c988876f5c471aad" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasDerivedFrom.<ref refid="struct_prov_utils_1_1_was_derived_from_1acd6605669cb7cd025450656b03b752d2" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasDerivedFroms.push_back(tmpWasDerivedFrom);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasDerivedFroms;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514" refid="class_in_di_prov_client_1a752ed9ff959b75d702f72346111d1676" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasAttributedTo&gt;<sp/><ref refid="class_in_di_prov_client_1a752ed9ff959b75d702f72346111d1676" kindref="member">InDiProvClient::deSerializeWasAttributedTos</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wasAttributedTosStr){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(wasAttributedTosStr);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasAttributedTo&gt;<sp/>wasAttributedTos;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasAttributedTos&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_attributed_to" kindref="compound">ProvUtils::WasAttributedTo</ref><sp/>tmpWasAttributedTo;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;entID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAttributedTo.<ref refid="struct_prov_utils_1_1_was_attributed_to_1ad184c9fd74c7380da78c64720d02f135" kindref="member">entID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;agentID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAttributedTo.<ref refid="struct_prov_utils_1_1_was_attributed_to_1abc7f19f78499d04010b362c336cea8cd" kindref="member">agentID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAttributedTo.<ref refid="struct_prov_utils_1_1_was_attributed_to_1a5c9fd5945f07d753fe4eb146268c7b3f" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAttributedTo.<ref refid="struct_prov_utils_1_1_was_attributed_to_1a0f0bb67866aaed93ef28d366f31ebede" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAttributedTo.<ref refid="struct_prov_utils_1_1_was_attributed_to_1a8d6a730eeb6d8ecb68ae449e64c20634" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasAttributedTos.push_back(tmpWasAttributedTo);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasAttributedTos;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542" refid="class_in_di_prov_client_1a30ac2a5d87785c8bf7929d508bccf191" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasAssociatedWith&gt;<sp/><ref refid="class_in_di_prov_client_1a30ac2a5d87785c8bf7929d508bccf191" kindref="member">InDiProvClient::deSerializeWasAssociatedWiths</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wasAssociatedWithsStr){</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(wasAssociatedWithsStr);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasAssociatedWith&gt;<sp/>wasAssociatedWiths;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasAssociatedWiths&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_associated_with" kindref="compound">ProvUtils::WasAssociatedWith</ref><sp/>tmpWasAssociatedWith;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;actID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1a005080cf31901af00296e6aabe8f8ceb" kindref="member">actID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;agentID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1a355949a1838fdfcfbca42ba08d77f00f" kindref="member">agentID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;planID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1ac85ee54813b5a8b7d46dc4b017d278ab" kindref="member">planID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1ae47f785d181230a52589c9e85aface02" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;role&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1abc52263ea80c3bff0c6a7f492a27a28b" kindref="member">role</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1a1af23db2361a85fe180b06f19a36a0d6" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasAssociatedWith.<ref refid="struct_prov_utils_1_1_was_associated_with_1a9e2275a8b9b991b969acb43ec467eb85" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasAssociatedWiths.push_back(tmpWasAssociatedWith);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasAssociatedWiths;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574" refid="class_in_di_prov_client_1a9c131081cbb7f6494d6d307d12559ddf" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasInformedBy&gt;<sp/><ref refid="class_in_di_prov_client_1a9c131081cbb7f6494d6d307d12559ddf" kindref="member">InDiProvClient::deSerializeWasInformedBys</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wasInformedByStr){</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(wasInformedByStr);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasInformedBy&gt;<sp/>wasInformedBys;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasInformedBys&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_informed_by" kindref="compound">ProvUtils::WasInformedBy</ref><sp/>tmpWasInformedBy;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;informed&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasInformedBy.<ref refid="struct_prov_utils_1_1_was_informed_by_1ac34a2f8f42c52c7a1bf240182cb1070b" kindref="member">informed</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;informant&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasInformedBy.<ref refid="struct_prov_utils_1_1_was_informed_by_1a614d109abfeacef33acff0701784efa9" kindref="member">informant</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasInformedBy.<ref refid="struct_prov_utils_1_1_was_informed_by_1adaa45666484c33890b6c384736c63898" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasInformedBy.<ref refid="struct_prov_utils_1_1_was_informed_by_1a5ab1cf3b00d8c91ba8f6ce3c862cc1c4" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasInformedBy.<ref refid="struct_prov_utils_1_1_was_informed_by_1ad3d5d14bb09c1bab4e5218ca30d60b14" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasInformedBys.push_back(tmpWasInformedBy);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasInformedBys;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602" refid="class_in_di_prov_client_1a96f90e39262f2b956d05096231aa5801" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasStartedBy&gt;<sp/><ref refid="class_in_di_prov_client_1a96f90e39262f2b956d05096231aa5801" kindref="member">InDiProvClient::deSerializeWasStartedBys</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wasStartedBysStr){</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(wasStartedBysStr);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasStartedBy&gt;<sp/>wasStartedBys;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasStartedBys&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_started_by" kindref="compound">ProvUtils::WasStartedBy</ref><sp/>tmpWasStartedBy;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;actID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1ae8b03b355bd638b05e1d620cc377b0d8" kindref="member">actID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;entID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1adb3d10cac5d50a81bf898f7956158095" kindref="member">entID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;starterActID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1ae187cefa27b4729ca4f8c924788ff43c" kindref="member">starterActID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;sTime&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1a473cff86ed691f29812971c94f657a87" kindref="member">sTime</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1af0c3aad51ecafe05eb4c6c97791ab5b1" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1abeab143270034629e44f777701dc6792" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;role&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1a6d17405f0c853dec1d882b9fe93033b5" kindref="member">role</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1a03dcf675037a3f98c400f5426eeb7de6" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasStartedBy.<ref refid="struct_prov_utils_1_1_was_started_by_1abfc4dca5a8c9fc33e1c810e5b9a5dc0f" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasStartedBys.push_back(tmpWasStartedBy);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasStartedBys;</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638" refid="class_in_di_prov_client_1a5393f865d37acd18ef1af4e587eece29" refkind="member"><highlight class="normal">vector&lt;ProvUtils::WasEndedBy&gt;<sp/><ref refid="class_in_di_prov_client_1a5393f865d37acd18ef1af4e587eece29" kindref="member">InDiProvClient::deSerializeWasEndedBys</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*WasEndedBysStr){</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>jobj<sp/>=<sp/>json_tokener_parse(WasEndedBysStr);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProvUtils::WasEndedBy&gt;<sp/>wasEndedBys;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>json_object_object_foreach(jobj,<sp/>key,<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(key,<sp/></highlight><highlight class="stringliteral">&quot;wasEndedBys&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*jarray<sp/>=<sp/>json_object_object_get(jobj,<sp/>key);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arraylen<sp/>=<sp/>json_object_array_length(jarray);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>arraylen;<sp/>i++){</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object<sp/>*<sp/>tmpjobj<sp/>=<sp/>json_object_array_get_idx(jarray,<sp/>i);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_prov_utils_1_1_was_ended_by" kindref="compound">ProvUtils::WasEndedBy</ref><sp/>tmpWasEndedBy;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_object_object_foreach(tmpjobj,<sp/>tmpkey,<sp/>tmpval){</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;actID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1a22c9f7022097e4cd409b02653582a539" kindref="member">actID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;entID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1a8e083092a08c19da1a4e6e5b64cde20a" kindref="member">entID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;enderActID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1aa44c6bdb89f43facb541bc310ba480a2" kindref="member">enderActID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;eTime&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1af536f6636f9f47973d6c54ade6522b5a" kindref="member">eTime</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1af82ae3d026502438a125dd862c70091e" kindref="member">label</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1a9facb5793326c01fb66c0d468f463fe7" kindref="member">location</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;role&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1a99d83d6c5ec830f2c1fc45d7aa886742" kindref="member">role</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1a2b57f65acc219202e111c989a5523188" kindref="member">type</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpWasEndedBy.<ref refid="struct_prov_utils_1_1_was_ended_by_1a09c7891b60eafd8fd5e5fffd567b1a44" kindref="member">ID</ref>=json_object_get_string(tmpval);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasEndedBys.push_back(tmpWasEndedBy);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasEndedBys;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mohammad/Downloads/InDivProvClient/indiprovclient.cpp"/>
  </compounddef>
</doxygen>
